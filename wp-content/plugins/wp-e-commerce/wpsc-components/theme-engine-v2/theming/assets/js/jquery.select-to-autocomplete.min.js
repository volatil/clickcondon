!function($){var settings={sort:!1,"sort-attr":"data-priority","sort-desc":!1,autoselect:!0,"alternative-spellings":!0,"alternative-spellings-attr":"data-alternative-spellings","remove-valueless-options":!0,"copy-attributes-to-text-field":!0,"autocomplete-plugin":"jquery_ui","relevancy-sorting":!0,"relevancy-sorting-partial-match-value":1,"relevancy-sorting-strict-match-value":5,"relevancy-sorting-booster-attr":"data-relevancy-booster",minLength:0,delay:0,autoFocus:!0,handle_invalid_input:function(context){var selected_finder="option:selected:first";context.settings["remove-valueless-options"]&&(selected_finder='option:selected[value!=""]:first'),context.$text_field.val(context.$select_field.find(selected_finder).text())},handle_select_field:function($select_field){return $select_field.hide()},insert_text_field:function(context){var $text_field=$('<input type="text"></input>');if(settings["copy-attributes-to-text-field"]){for(var attrs={},raw_attrs=context.$select_field[0].attributes,i=0;i<raw_attrs.length;i++){var key=raw_attrs[i].nodeName,value=raw_attrs[i].nodeValue;"name"!==key&&"id"!==key&&void 0!==context.$select_field.attr(key)&&(attrs[key]=value)}$text_field.attr(attrs)}$text_field.blur(function(){var valid_values=context.$select_field.find("option").map(function(i,option){return $(option).text()});$.inArray($text_field.val(),valid_values)<0&&"function"==typeof settings.handle_invalid_input&&settings.handle_invalid_input(context)}),context.settings.autoselect&&$text_field.click(function(){this.select()});var selected_finder="option:selected:first";return context.settings["remove-valueless-options"]&&(selected_finder='option:selected[value!=""]:first'),$text_field.val(context.$select_field.find(selected_finder).text()).insertAfter(context.$select_field)},extract_options:function($select_field){var options=[],$options=$select_field.find("option"),number_of_options=$options.length;return $options.each(function(){var $option=$(this),option={"real-value":$option.attr("value"),label:$option.text()};if(settings["remove-valueless-options"]&&""===option["real-value"]);else{option.matches=option.label;var alternative_spellings=$option.attr(settings["alternative-spellings-attr"]);if(alternative_spellings&&(option.matches+=" "+alternative_spellings),settings.sort){var weight=parseInt($option.attr(settings["sort-attr"]),10);option.weight=weight?weight:number_of_options}if(settings["relevancy-sorting"]){option["relevancy-score"]=0,option["relevancy-score-booster"]=1;var boost_by=parseFloat($option.attr(settings["relevancy-sorting-booster-attr"]));boost_by&&(option["relevancy-score-booster"]=boost_by)}options.push(option)}}),settings.sort&&(settings["sort-desc"]?options.sort(function(a,b){return b.weight-a.weight}):options.sort(function(a,b){return a.weight-b.weight})),options}},public_methods={init:function(customizations){return/msie/.test(navigator.userAgent.toLowerCase())&&parseInt(navigator.appVersion,10)<=6?this:(settings=$.extend(settings,customizations),this.each(function(){var $select_field=$(this),context={$select_field:$select_field,options:settings.extract_options($select_field),settings:settings};context.$text_field=settings.insert_text_field(context),settings.handle_select_field($select_field),"string"==typeof settings["autocomplete-plugin"]?adapters[settings["autocomplete-plugin"]](context):settings["autocomplete-plugin"](context)}))}},adapters={jquery_ui:function(context){var filter_options=function(term){for(var split_term=term.split(" "),matchers=[],i=0;i<split_term.length;i++)if(split_term[i].length>0){var matcher={};matcher.partial=new RegExp($.ui.autocomplete.escapeRegex(split_term[i]),"i"),context.settings["relevancy-sorting"]&&(matcher.strict=new RegExp("^"+$.ui.autocomplete.escapeRegex(split_term[i]),"i")),matchers.push(matcher)}return $.grep(context.options,function(option){var partial_matches=0;if(context.settings["relevancy-sorting"])var strict_match=!1,split_option_matches=option.matches.split(" ");for(var i=0;i<matchers.length;i++)if(matchers[i].partial.test(option.matches)&&partial_matches++,context.settings["relevancy-sorting"])for(var q=0;q<split_option_matches.length;q++)if(matchers[i].strict.test(split_option_matches[q])){strict_match=!0;break}if(context.settings["relevancy-sorting"]){var option_score=0;option_score+=partial_matches*context.settings["relevancy-sorting-partial-match-value"],strict_match&&(option_score+=context.settings["relevancy-sorting-strict-match-value"]),option_score*=option["relevancy-score-booster"],option["relevancy-score"]=option_score}return!term||matchers.length===partial_matches})},update_select_value=function(option){if(option)context.$select_field.val()!==option["real-value"]&&(context.$select_field.val(option["real-value"]),context.$select_field.change());else{for(var option_name=context.$text_field.val().toLowerCase(),matching_option={"real-value":!1},i=0;i<context.options.length;i++)if(option_name===context.options[i].label.toLowerCase()){matching_option=context.options[i];break}context.$select_field.val()!==matching_option["real-value"]&&(context.$select_field.val(matching_option["real-value"]||""),context.$select_field.change()),matching_option["real-value"]&&context.$text_field.val(matching_option.label),"function"==typeof context.settings.handle_invalid_input&&""===context.$select_field.val()&&context.settings.handle_invalid_input(context)}};context.$text_field.autocomplete({minLength:context.settings.minLength,delay:context.settings.delay,autoFocus:context.settings.autoFocus,source:function(request,response){var filtered_options=filter_options(request.term);context.settings["relevancy-sorting"]&&(filtered_options=filtered_options.sort(function(a,b){return b["relevancy-score"]==a["relevancy-score"]?b.label<a.label?1:-1:b["relevancy-score"]-a["relevancy-score"]})),response(filtered_options)},select:function(event,ui){update_select_value(ui.item)},change:function(event,ui){update_select_value(ui.item)}}),context.$text_field.parents("form:first").submit(function(){update_select_value()}),update_select_value()}};$.fn.selectToAutocomplete=function(method){return public_methods[method]?public_methods[method].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof method&&method?void $.error("Method "+method+" does not exist on jQuery.fn.selectToAutocomplete"):public_methods.init.apply(this,arguments)}}(jQuery);